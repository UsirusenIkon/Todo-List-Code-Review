"use strict";(self.webpackChunkto_do_list=self.webpackChunkto_do_list||[]).push([[826],{426:(n,t,e)=>{e.d(t,{Z:()=>a});var o=e(537),r=e.n(o),i=e(645),s=e.n(i)()(r());s.push([n.id,"/* custom properties */\n:root {\n  --primary-color-: black;\n  --secondary-color: rgba(0, 0, 0, 0.434);\n  --tetiary-color: rgba(128, 128, 128, 0.372);\n}\n\n/* css resets */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: var(--tetiary-color);\n  font-size: 1rem;\n  padding-top: 5rem;\n}\n\np {\n  text-align: center;\n}\n\nbutton {\n  background-color: unset;\n  border: none;\n}\n\n.bx {\n  font-size: 1.5rem;\n}\n\n/* utility classes */\n.flex {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid black;\n  padding: 1rem;\n  width: 100%;\n  max-width: 30rem;\n}\n\n/* todo-wrap */\n.todo-wrap {\n  border: 1px solid black;\n  margin: 3rem auto;\n  flex-direction: column;\n}\n\n.form {\n  justify-content: space-between;\n}\n\n.input,\n.item {\n  height: 2rem;\n  width: 100%;\n  background-color: var(--primary-color);\n  color: var(--primary-color);\n  outline: none;\n  border: none;\n}\n\ninput::placeholder,\n.item::placeholder {\n  color: var(--secondary-color);\n  font-style: italic;\n}\n\ninput:focus {\n  outline: none;\n  border: none;\n}\n\n.todo-list {\n  width: 100%;\n  max-height: 30vh;\n  overflow: scroll;\n}\n\n.todo-list::-webkit-scrollbar {\n  display: none;\n}\n\n.box {\n  margin-right: 1rem;\n}\n\n.ticked {\n  text-decoration: line-through;\n  font-style: italic;\n}\n\n.clear-list {\n  justify-content: center;\n  padding: 0;\n}\n\n.clear-all {\n  width: 100%;\n  padding: 1.5rem;\n\n  /* height: 100%; */\n  background-color: var(--secondary-color);\n  color: rgba(240, 248, 255, 0.822);\n}\n\n/* footer */\n.footer {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.543);\n  color: rgba(240, 248, 255, 0.822);\n  height: 4rem;\n  padding: 1.5rem;\n}\n\n.info {\n  font-size: 2rem;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,sBAAsB;AACtB;EACE,uBAAuB;EACvB,uCAAuC;EACvC,2CAA2C;AAC7C;;AAEA,eAAe;AACf;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,sCAAsC;EACtC,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,iBAAiB;AACnB;;AAEA,oBAAoB;AACpB;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,uBAAuB;EACvB,aAAa;EACb,WAAW;EACX,gBAAgB;AAClB;;AAEA,cAAc;AACd;EACE,uBAAuB;EACvB,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;;EAEE,YAAY;EACZ,WAAW;EACX,sCAAsC;EACtC,2BAA2B;EAC3B,aAAa;EACb,YAAY;AACd;;AAEA;;EAEE,6BAA6B;EAC7B,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,YAAY;AACd;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,eAAe;;EAEf,kBAAkB;EAClB,wCAAwC;EACxC,iCAAiC;AACnC;;AAEA,WAAW;AACX;EACE,eAAe;EACf,SAAS;EACT,WAAW;EACX,sCAAsC;EACtC,iCAAiC;EACjC,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB",sourcesContent:["/* custom properties */\n:root {\n  --primary-color-: black;\n  --secondary-color: rgba(0, 0, 0, 0.434);\n  --tetiary-color: rgba(128, 128, 128, 0.372);\n}\n\n/* css resets */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: var(--tetiary-color);\n  font-size: 1rem;\n  padding-top: 5rem;\n}\n\np {\n  text-align: center;\n}\n\nbutton {\n  background-color: unset;\n  border: none;\n}\n\n.bx {\n  font-size: 1.5rem;\n}\n\n/* utility classes */\n.flex {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid black;\n  padding: 1rem;\n  width: 100%;\n  max-width: 30rem;\n}\n\n/* todo-wrap */\n.todo-wrap {\n  border: 1px solid black;\n  margin: 3rem auto;\n  flex-direction: column;\n}\n\n.form {\n  justify-content: space-between;\n}\n\n.input,\n.item {\n  height: 2rem;\n  width: 100%;\n  background-color: var(--primary-color);\n  color: var(--primary-color);\n  outline: none;\n  border: none;\n}\n\ninput::placeholder,\n.item::placeholder {\n  color: var(--secondary-color);\n  font-style: italic;\n}\n\ninput:focus {\n  outline: none;\n  border: none;\n}\n\n.todo-list {\n  width: 100%;\n  max-height: 30vh;\n  overflow: scroll;\n}\n\n.todo-list::-webkit-scrollbar {\n  display: none;\n}\n\n.box {\n  margin-right: 1rem;\n}\n\n.ticked {\n  text-decoration: line-through;\n  font-style: italic;\n}\n\n.clear-list {\n  justify-content: center;\n  padding: 0;\n}\n\n.clear-all {\n  width: 100%;\n  padding: 1.5rem;\n\n  /* height: 100%; */\n  background-color: var(--secondary-color);\n  color: rgba(240, 248, 255, 0.822);\n}\n\n/* footer */\n.footer {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.543);\n  color: rgba(240, 248, 255, 0.822);\n  height: 4rem;\n  padding: 1.5rem;\n}\n\n.info {\n  font-size: 2rem;\n}\n"],sourceRoot:""}]);const a=s},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);o&&s[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),s=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(s).concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var i={},s=[],a=0;a<n.length;a++){var c=n[a],A=o.base?c[0]+o.base:c[0],l=i[A]||0,d="".concat(A," ").concat(l);i[A]=l+1;var u=e(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,o);o.byIndex=a,t.splice(a,0,{identifier:d,updater:m,references:1})}s.push(d)}return s}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var s=0;s<i.length;s++){var a=e(i[s]);t[a].references--}for(var c=o(n,r),A=0;A<i.length;A++){var l=e(i[A]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},368:(n,t,e)=>{var o=e(379),r=e.n(o),i=e(795),s=e.n(i),a=e(569),c=e.n(a),A=e(565),l=e.n(A),d=e(216),u=e.n(d),p=e(589),m=e.n(p),f=e(426),h={};h.styleTagTransform=m(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),r()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;const C=class{constructor(n,t,e){this.description=n,this.completed=t,this.idx=e}},E=new class{constructor(){this.todos=JSON.parse(localStorage.getItem("todos"))||[]}addTodo(n){this.todos.push(n),localStorage.setItem("todos",JSON.stringify(this.todos))}updateTodo(n,t){this.todos[n-1]=t;for(let n=0;n<this.todos.length;n+=1)this.todos[n].idx=n+1;localStorage.setItem("todos",JSON.stringify(this.todos))}deleteTodo(n){1===this.todos.length?this.todos=[]:this.todos.splice(n,1);for(let n=0;n<this.todos.length;n+=1)this.todos[n].idx=n+1;localStorage.setItem("todos",JSON.stringify(this.todos))}clickCompleted(n){this.todos[n-1].completed=!this.todos[n-1].completed;for(let n=0;n<this.todos.length;n+=1)this.todos[n].idx=n+1;localStorage.setItem("todos",JSON.stringify(this.todos))}clearCompleted(){const n=this.todos.filter((n=>!n.completed));this.todos=n;for(let n=0;n<this.todos.length;n+=1)this.todos[n].idx=n+1;localStorage.setItem("todos",JSON.stringify(this.todos))}getAllTodos(){return this.todos}},g=document.querySelector(".clear-all"),b=()=>{const n=document.querySelector(".todo-list");n.innerHTML="",0===E.getAllTodos().length?n.innerHTML='<h3 class= "alert">Todolist is Empty</h3>':E.getAllTodos().forEach(((t,e)=>{const o=document.createElement("div");o.classList.add("todo-list-item");const r=()=>t.completed?"ticked":"";o.innerHTML=`\n        <div data-check = ${e} class="todo border-bottom flex">\n        <input data-complete = ${t.idx} class="box" ${r()} type="checkbox" />\n        <input data-item = ${t.idx} class="item ${r()}" type="text" value="${t.description}" />\n        <i data-remote = ${e} class='bx bx-trash delete-btn'></i>\n        </div>\n      `,n.appendChild(o)})),document.querySelectorAll(".delete-btn").forEach((n=>{n.addEventListener("click",(n=>{const{remote:t}=n.target.dataset;E.deleteTodo(t),b()}))}));const t=document.querySelectorAll(".todo-list-item"),e=document.querySelectorAll(".box");t.forEach((n=>{n.addEventListener("keyup",(t=>{const{dataset:o,value:r}=t.target,i=o.item,s=r.trim(),a=new C(s,!1,i);E.updateTodo(i,a),e[i-1].checked=!1,n.classList.remove("ticked")}))}));const o=document.querySelectorAll(".item");document.querySelectorAll(".box").forEach((n=>{n.addEventListener("click",(t=>{const{complete:e}=t.target.dataset;n.checked?(E.clickCompleted(e),o[e-1].classList.add("ticked")):(E.clickCompleted(e),o[e-1].classList.remove("ticked"))}))})),g.addEventListener("click",(()=>{E.clearCompleted(),b()}))},y=document.querySelector(".form");y.addEventListener("submit",(n=>{n.preventDefault();const t=document.querySelector(".input").value;if(!t)return;const e=new C(t,!1,E.getAllTodos().length+1);E.addTodo(e),y.reset(),document.querySelector(".input").focus(),b()})),window.onload=b()}},n=>{n(n.s=368)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,